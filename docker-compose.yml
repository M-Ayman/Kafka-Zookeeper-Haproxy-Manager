version: '2'

services:
  zookeeper:
    image: confluent/zookeeper
    ports:
      - 2181
    networks:
      - app_net

  kafka:
    image: polinux/kafka
    depends_on:
      - zookeeper
    links:
      - "zookeeper:zookeeper"
    ports:
      - 9092
      - 1099
    environment:
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://192.168.0.50:9092"
      KAFKA_CREATE_TOPICS: "test1:1:1,test2:1:1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=192.168.0.50 -Dcom.sun.management.jmxremote.rmi.port=1099 -Djava.net.preferIPv4Stack=true
      JMX_PORT: 1099
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app_net

  kafkaManager:
    image: sheepkiller/kafka-manager:1.3.1.8
    depends_on:
      - kafka
      - zookeeper
    links:
      - "zookeeper:zookeeper"
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true
    ports:
      - 9000
    networks:
      - app_net

  haproxy:
    image: million12/haproxy:1.7.5
    depends_on:
      - zookeeper
      - kafka
      - kafkaManager
    links:
      - "zookeeper:zookeeper"
      - "kafka:kafka"
      - "kafkaManager:kafkamanager"
    ports:
      - "9092:9092"
      - "1099:1099"
      - "9000:9000"
    volumes:
      - ${PWD}:/etc/haproxy
    networks:
      - app_net

networks:
  app_net:
    driver: bridge
